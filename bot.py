import asyncio
from aiogram import Bot, Dispatcher, types, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

API_TOKEN = "7270373741:AAGmJ6m_KDMfNiNIdRC198L91S_SkTHLeBg"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)


class CareerTest(StatesGroup):
    question_1 = State()
    question_2 = State()
    question_3 = State()
    question_4 = State()
    question_5 = State()
    question_6 = State()
    question_7 = State()
    question_8 = State()
    question_9 = State()
    question_10 = State()
    question_11 = State()
    question_12 = State()


main_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]], resize_keyboard=True
)

keyboard_q2 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–î–æ 18")], [KeyboardButton(text="18‚Äì25")],
        [KeyboardButton(text="26‚Äì35")], [KeyboardButton(text="36+")],
    ], resize_keyboard=True
)

keyboard_q3 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–í—ã—Å–æ–∫–∏–µ –∑–∞—Ä–ø–ª–∞—Ç—ã")], [KeyboardButton(text="–ò–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º")],
        [KeyboardButton(text="–£–¥–∞–ª—ë–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞")], [KeyboardButton(text="–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–æ—Å—Ç–∞")],
    ], resize_keyboard=True
)

keyboard_q4 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")], [KeyboardButton(text="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ (UI)")],
        [KeyboardButton(text="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö")], [KeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ DevOps")],
        [KeyboardButton(text="–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞")], [KeyboardButton(text="–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")],
    ], resize_keyboard=True
)

keyboard_q5 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="Docker, Kubernetes")], [KeyboardButton(text="React, Vue.js")],
        [KeyboardButton(text="Python, Django")], [KeyboardButton(text="SQL, MongoDB")],
        [KeyboardButton(text="Flutter, Swift")],
    ], resize_keyboard=True
)

keyboard_q6 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="Python")], [KeyboardButton(text="JavaScript")],
        [KeyboardButton(text="Java")], [KeyboardButton(text="C++")],
        [KeyboardButton(text="Go")],
    ], resize_keyboard=True
)

keyboard_q7 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ú–µ–Ω–µ–µ 1 —á–∞—Å–∞")], [KeyboardButton(text="1‚Äì3 —á–∞—Å–∞")],
        [KeyboardButton(text="3‚Äì5 —á–∞—Å–æ–≤")], [KeyboardButton(text="–ë–æ–ª—å—à–µ 5 —á–∞—Å–æ–≤")],
    ], resize_keyboard=True
)

keyboard_q8 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ù–µ—Ç, —è –Ω–æ–≤–∏—á–æ–∫")], [KeyboardButton(text="–ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è (–∫—É—Ä—Å—ã)")],
        [KeyboardButton(text="–ï—Å—Ç—å –æ–ø—ã—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è")], [KeyboardButton(text="–†–∞–±–æ—Ç–∞–ª –≤ IT")],
    ], resize_keyboard=True
)

keyboard_q9 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ù–∞—á–∞–ª—å–Ω—ã–π (A1‚ÄìA2)")], [KeyboardButton(text="–°—Ä–µ–¥–Ω–∏–π (B1‚ÄìB2)")],
        [KeyboardButton(text="–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (C1‚ÄìC2)")], [KeyboardButton(text="–ù–µ –∑–Ω–∞—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π")],
    ], resize_keyboard=True
)

keyboard_q10 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–í –∫–æ–º–∞–Ω–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")], [KeyboardButton(text="–í –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏")],
        [KeyboardButton(text="–í —Å—Ñ–µ—Ä–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")], [KeyboardButton(text="–í —Å—Ç–∞—Ä—Ç–∞–ø–µ")],
        [KeyboardButton(text="–í –∫—Ä—É–ø–Ω–æ–π IT-–∫–æ–º–ø–∞–Ω–∏–∏")],
    ], resize_keyboard=True
)

keyboard_q11 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º")], [KeyboardButton(text="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ UI")],
        [KeyboardButton(text="–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")], [KeyboardButton(text="–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")],
    ], resize_keyboard=True
)

keyboard_q12 = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–†–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ –Ω–∞–¥ –±–æ–ª—å—à–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏")],
        [KeyboardButton(text="–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏")],
        [KeyboardButton(text="–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤–æ–µ")],
        [KeyboardButton(text="–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —É–ª—É—á—à–∞—Ç—å –≥–æ—Ç–æ–≤–æ–µ")],
    ], resize_keyboard=True
)


resources = {
    'q4': {
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ": "https://www.codecademy.com/catalog/subject/all",
        "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ (UI)": "https://www.freecodecamp.org/news/learn-responsive-web-design/",
        "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö": "https://www.datacamp.com/courses/intro-to-python-for-data-science",
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ DevOps": "https://www.edx.org/learn/devops",
        "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": "https://developer.android.com/courses",
        "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å": "https://www.coursera.org/learn/intro-to-cyber-security",
    },
    'q5': {
        "Docker, Kubernetes": "https://www.udemy.com/course/docker-mastery/",
        "React, Vue.js": "https://reactjs.org/docs/getting-started.html",
        "Python, Django": "https://www.djangoproject.com/start/",
        "SQL, MongoDB": "https://www.codecademy.com/learn/learn-sql",
        "Flutter, Swift": "https://flutter.dev/docs",
    },
    'q6': {
        "Python": "https://www.learnpython.org/",
        "JavaScript": "https://www.javascript.com/learn",
        "Java": "https://www.codecademy.com/learn/learn-java",
        "C++": "https://www.learncpp.com/",
        "Go": "https://golang.org/doc/",
    },
}


@router.message(Command("test"))
@router.message(lambda message: message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")
async def start_test(message: types.Message, state: FSMContext):
    await state.clear()
    await state.set_state(CareerTest.question_1)
    await message.answer(
        "üìü **IT –¢–µ—Å—Ç**\n\n"
        "–Ø –∑–∞–¥–∞–º —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é IT-—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.\n\n"
        "üí° –í–æ–ø—Ä–æ—Å 1: –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
        reply_markup=None
    )


@router.message(CareerTest.question_1)
async def answer_q1(message: types.Message, state: FSMContext):
    await state.update_data(q1=message.text)
    await state.set_state(CareerTest.question_2)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 2: –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?", reply_markup=keyboard_q2)


@router.message(CareerTest.question_2)
async def answer_q2(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q2=message.text)
    await state.set_state(CareerTest.question_3)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 3: –ü–æ—á–µ–º—É —Ç—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è IT?", reply_markup=keyboard_q3)


@router.message(CareerTest.question_3)
async def answer_q3(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q3=message.text)
    await state.set_state(CareerTest.question_4)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 4: –ö–∞–∫—É—é —Å—Ñ–µ—Ä—É IT —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –∏–∑—É—á–∞—Ç—å?", reply_markup=keyboard_q4)


@router.message(CareerTest.question_4)
async def answer_q4(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q4=message.text)
    resource = resources['q4'].get(message.text, "–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    await state.set_state(CareerTest.question_5)
    await message.answer(
        f"üåê –†–µ—Å—É—Ä—Å: {resource}\n\nüí° –í–æ–ø—Ä–æ—Å 5: –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã?",
        reply_markup=keyboard_q5
    )


@router.message(CareerTest.question_5)
async def answer_q5(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q5=message.text)
    resource = resources['q5'].get(message.text, "–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    await state.set_state(CareerTest.question_6)
    await message.answer(
        f"üåê –†–µ—Å—É—Ä—Å: {resource}\n\nüí° –í–æ–ø—Ä–æ—Å 6: –ö–∞–∫–∏–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã?",
        reply_markup=keyboard_q6
    )


@router.message(CareerTest.question_6)
async def answer_q6(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q6=message.text)
    resource = resources['q6'].get(message.text, "–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    await state.set_state(CareerTest.question_7)
    await message.answer(
        f"üåê –†–µ—Å—É—Ä—Å: {resource}\n\nüí° –í–æ–ø—Ä–æ—Å 7: –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Ç—ã –≥–æ—Ç–æ–≤ —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤ –¥–µ–Ω—å?",
        reply_markup=keyboard_q7
    )


@router.message(CareerTest.question_7)
async def answer_q7(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q7=message.text)
    await state.set_state(CareerTest.question_8)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 8: –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç –≤ IT?", reply_markup=keyboard_q8)


@router.message(CareerTest.question_8)
async def answer_q8(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q8=message.text)
    await state.set_state(CareerTest.question_9)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 9: –ö–∞–∫–æ–π —É —Ç–µ–±—è —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ?", reply_markup=keyboard_q9)


@router.message(CareerTest.question_9)
async def answer_q9(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q9=message.text)
    await state.set_state(CareerTest.question_10)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 10: –ì–¥–µ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å?", reply_markup=keyboard_q10)


@router.message(CareerTest.question_10)
async def answer_q10(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q10=message.text)
    await state.set_state(CareerTest.question_11)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 11: –° –∫–∞–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ —Ç–µ–±–µ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è?", reply_markup=keyboard_q11)


@router.message(CareerTest.question_11)
async def answer_q11(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q11=message.text)
    await state.set_state(CareerTest.question_12)
    await message.answer("üí° –í–æ–ø—Ä–æ—Å 12: –ö–∞–∫–æ–π —Å—Ç–∏–ª—å —Ä–∞–±–æ—Ç—ã —Ç–µ–±–µ –±–ª–∏–∂–µ?", reply_markup=keyboard_q12)


@router.message(CareerTest.question_12)
async def answer_q12(message: types.Message, state: FSMContext):
    if message.text == "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        await start_test(message, state)
        return
    await state.update_data(q12=message.text)
    user_data = await state.get_data()

    specialty = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"
    description = ""
    resource = "https://www.google.com"
    if user_data["q4"] == "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ" and user_data["q6"] == "JavaScript":
        specialty = "Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
        description = "–°–æ–∑–¥–∞—ë—à—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Å–∞–π—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é HTML, CSS –∏ JavaScript."
        resource = "https://www.freecodecamp.org/news/learn-responsive-web-design/"
    elif user_data["q4"] == "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö" and user_data["q11"] == "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö":
        specialty = "–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö"
        description = "–†–∞–±–æ—Ç–∞–µ—à—å —Å –±–æ–ª—å—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å –∏ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—à—å –∏—Ö."
        resource = "https://www.datacamp.com/courses/intro-to-python-for-data-science"
    elif user_data["q4"] == "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å":
        specialty = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        description = "–ó–∞—â–∏—â–∞–µ—à—å —Å–∏—Å—Ç–µ–º—ã –æ—Ç —É–≥—Ä–æ–∑ –∏ –∞—Ç–∞–∫."
        resource = "https://www.coursera.org/learn/intro-to-cyber-security"

    await message.answer(
        f"üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞, {user_data['q1']}!**\n\n"
        f"1. –í–æ–∑—Ä–∞—Å—Ç: {user_data['q2']}\n"
        f"2. –ú–æ—Ç–∏–≤–∞—Ü–∏—è: {user_data['q3']}\n"
        f"3. –°—Ñ–µ—Ä–∞: {user_data['q4']}\n"
        f"4. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {user_data['q5']}\n"
        f"5. –Ø–∑—ã–∫–∏: {user_data['q6']}\n"
        f"6. –í—Ä–µ–º—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ: {user_data['q7']}\n"
        f"7. –û–ø—ã—Ç: {user_data['q8']}\n"
        f"8. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π: {user_data['q9']}\n"
        f"9. –ì–¥–µ —Ä–∞–±–æ—Ç–∞—Ç—å: {user_data['q10']}\n"
        f"10. –ó–∞–¥–∞—á–∏: {user_data['q11']}\n"
        f"11. –°—Ç–∏–ª—å —Ä–∞–±–æ—Ç—ã: {user_data['q12']}\n\n"
        f"üéØ **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:** {specialty}\n"
        f"‚ÑπÔ∏è {description}\n"
        f"üîó –†–µ—Å—É—Ä—Å: {resource}",
        reply_markup=main_keyboard
    )
    await state.clear()


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())